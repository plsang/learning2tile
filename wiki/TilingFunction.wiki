#Introducing Tiling functions.

The following txyc matrix is use in the following tiling function
<code language="R">
txyc_matrix = as.matrix(expand.grid(1:500,1:333))
</code>


== Square ==

== Hexagon ==
To generate the a tiling by hexagons call *TilingHexagon*, 
<code language="R">
TilingHexagon <- function(u, txyc_matrix, width, height)
</code>

u is the parameter controlling the edge length of each hexagon and it follows:
\text{hex_edge_len} = \frac{\text{height}}{u \times \sqrt{3}}

===Examples===
<code language="R">
t = TilingHexagon(1, txyc_matrix, 500, 333)
PlotTiling(txyc_matrix, t)
</code>
[http://learning2tile.googlecode.com/svn/wiki/images/hexagon1.png]

<code language="R">
t = TilingHexagon(1.5, txyc_matrix, 500, 333)
PlotTiling(txyc_matrix, t)
</code>
[http://learning2tile.googlecode.com/svn/wiki/images/hexagon1.5.png]

<code language="R">
t = TilingHexagon(2, txyc_matrix, 500, 333)
PlotTiling(txyc_matrix, t)
</code>
[http://learning2tile.googlecode.com/svn/wiki/images/hexagon2.png]

<code language="R">
t = TilingHexagon(5, txyc_matrix, 500, 333)
PlotTiling(txyc_matrix, t)
</code>
[http://learning2tile.googlecode.com/svn/wiki/images/hexagon5.png]

== Camera ==
To generate the a tiling by hexagons call *TilingCamera*
<code language="R">
TilingCamera <- function(scalepara=0.5, txyc_matrix, width, height)
</code>
, where scalepara controls the radius of the center ellipse.




== Comments ==
Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages